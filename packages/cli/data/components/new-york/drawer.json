{
  "name": "drawer",
  "dependencies": [
    "vaul",
    "@radix-ui/react-dialog"
  ],
  "registryDependencies": [],
  "type": "components:ui",
  "files": [
    {
      "type": "tsx",
      "name": "index",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { Drawer as DrawerPrimitive } from 'vaul';\nimport { cn } from '@/lib/utils';\nimport styles from './drawer.module.css';\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n);\nDrawer.displayName = 'Drawer';\n\nconst DrawerTrigger = DrawerPrimitive.Trigger;\n\nconst DrawerPortal = DrawerPrimitive.Portal;\n\nconst DrawerClose = DrawerPrimitive.Close;\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(styles.drawerOverlay, className)}\n    {...props}\n  />\n));\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName;\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(styles.drawerContent, className)}\n      {...props}\n    >\n      <div className={styles.drawerContentDiv} />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n));\nDrawerContent.displayName = 'DrawerContent';\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div className={cn(styles.drawerHeader, className)} {...props} />\n);\nDrawerHeader.displayName = 'DrawerHeader';\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div className={cn(styles.drawerFooter, className)} {...props} />\n);\nDrawerFooter.displayName = 'DrawerFooter';\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(styles.drawerTitle, className)}\n    {...props}\n  />\n));\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName;\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(styles.drawerDescription, className)}\n    {...props}\n  />\n));\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName;\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n};\n"
    },
    {
      "type": "css",
      "name": "drawer.module",
      "content": ".drawerOverlay {\n  position: fixed;\n  inset: 0px;\n  z-index: 50;\n  background-color: rgb(0 0 0 / 0.8);\n}\n.drawerContent {\n  position: fixed;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n  z-index: 50;\n  margin-top: 6rem;\n  display: flex;\n  height: auto;\n  flex-direction: column;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n  border-width: 1px;\n  background-color: hsl(var(--background));\n}\n.drawerContentDiv {\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 1rem;\n  height: 0.5rem;\n  width: 100px;\n  border-radius: 9999px;\n  background-color: hsl(var(--muted));\n}\n.drawerHeader {\n  display: grid;\n  gap: 0.375rem;\n  padding: 1rem;\n  text-align: center;\n}\n@media (min-width: 640px) {\n  .drawerHeader {\n    text-align: left;\n  }\n}\n.drawerFooter {\n  margin-top: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  padding: 1rem;\n}\n.drawerTitle {\n  font-size: 1.125rem;\n  line-height: 1.75rem;\n  font-weight: 600;\n  line-height: 1;\n  letter-spacing: -0.025em;\n}\n.drawerDescription {\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  color: hsl(var(--muted-foreground));\n}\n"
    },
    {
      "type": "scss",
      "name": "drawer.module",
      "content": ".drawerOverlay {\n  position: fixed;\n  inset: 0px;\n  z-index: 50;\n  background-color: rgb(0 0 0 / 0.8);\n}\n.drawerContent {\n  position: fixed;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n  z-index: 50;\n  margin-top: 6rem;\n  display: flex;\n  height: auto;\n  flex-direction: column;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n  border-width: 1px;\n  background-color: hsl(var(--background));\n}\n.drawerContentDiv {\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 1rem;\n  height: 0.5rem;\n  width: 100px;\n  border-radius: 9999px;\n  background-color: hsl(var(--muted));\n}\n.drawerHeader {\n  display: grid;\n  gap: 0.375rem;\n  padding: 1rem;\n  text-align: center;\n}\n@media (min-width: 640px) {\n  .drawerHeader {\n    text-align: left;\n  }\n}\n.drawerFooter {\n  margin-top: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  padding: 1rem;\n}\n.drawerTitle {\n  font-size: 1.125rem;\n  line-height: 1.75rem;\n  font-weight: 600;\n  line-height: 1;\n  letter-spacing: -0.025em;\n}\n.drawerDescription {\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  color: hsl(var(--muted-foreground));\n}\n"
    }
  ]
}