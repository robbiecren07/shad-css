{
  "name": "dialog",
  "dependencies": [
    "@radix-ui/react-dialog"
  ],
  "registryDependencies": [],
  "type": "components:ui",
  "files": [
    {
      "type": "tsx",
      "name": "index",
      "content": "'use client';\n\nimport * as React from 'react';\nimport * as DialogPrimitive from '@radix-ui/react-dialog';\nimport { Cross2Icon } from '@radix-ui/react-icons';\nimport { cn } from '@/lib/utils';\nimport styles from './dialog.module.css';\n\nconst Dialog = DialogPrimitive.Root;\n\nconst DialogTrigger = DialogPrimitive.Trigger;\n\nconst DialogPortal = DialogPrimitive.Portal;\n\nconst DialogClose = DialogPrimitive.Close;\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(styles.dialogOverlay, className)}\n    {...props}\n  />\n));\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName;\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(styles.dialogContent, className)}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className={styles.dialogContentClose}>\n        <Cross2Icon className={styles.dialogContentCross2} />\n        <span className={styles.dialogContentSpan}>Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n));\nDialogContent.displayName = DialogPrimitive.Content.displayName;\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div className={cn(styles.dialogHeader, className)} {...props} />\n);\nDialogHeader.displayName = 'DialogHeader';\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div className={cn(styles.dialogFooter, className)} {...props} />\n);\nDialogFooter.displayName = 'DialogFooter';\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(styles.dialogTitle, className)}\n    {...props}\n  />\n));\nDialogTitle.displayName = DialogPrimitive.Title.displayName;\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(styles.dialogDescription, className)}\n    {...props}\n  />\n));\nDialogDescription.displayName = DialogPrimitive.Description.displayName;\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogClose,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n};\n"
    },
    {
      "type": "css",
      "name": "dialog.module",
      "content": ".dialogOverlay {\n  position: fixed;\n  inset: 0px;\n  z-index: 50;\n  background-color: rgb(0 0 0 / 0.8);\n}\n.dialogOverlay[data-state=\"open\"] {\n  animation: enter 0.15s cubic-bezier(0.16, 1, 0.3, 1) both;\n}\n.dialogOverlay[data-state=\"closed\"] {\n  animation: exit 0.15s cubic-bezier(0.16, 1, 0.3, 1) both;\n}\n.dialogOverlay[data-state=\"open\"] {\n  animation-name: enter;\n  animation-duration: 150ms;\n  --tw-enter-opacity: initial;\n  --tw-enter-scale: initial;\n  --tw-enter-rotate: initial;\n  --tw-enter-translate-x: initial;\n  --tw-enter-translate-y: initial;\n}\n.dialogOverlay[data-state=\"closed\"] {\n  animation-name: exit;\n  animation-duration: 150ms;\n  --tw-exit-opacity: initial;\n  --tw-exit-scale: initial;\n  --tw-exit-rotate: initial;\n  --tw-exit-translate-x: initial;\n  --tw-exit-translate-y: initial;\n  --tw-exit-opacity: 0;\n}\n.dialogOverlay[data-state=\"open\"] {\n  --tw-enter-opacity: 0;\n}\n.dialogContent {\n  position: fixed;\n  left: 50%;\n  top: 50%;\n  z-index: 50;\n  display: grid;\n  width: 100%;\n  max-width: 32rem;\n  --tw-translate-x: -50%;\n  --tw-translate-y: -50%;\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y))\n    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))\n    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n  gap: 1rem;\n  border-width: 1px;\n  background-color: hsl(var(--background));\n  padding: 1.5rem;\n  --tw-shadow:\n    0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);\n  --tw-shadow-colored:\n    0 10px 15px -3px var(--tw-shadow-color),\n    0 4px 6px -4px var(--tw-shadow-color);\n  box-shadow:\n    var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000),\n    var(--tw-shadow);\n  transition-duration: 200ms;\n  animation-duration: 200ms;\n}\n.dialogContent[data-state=\"open\"] {\n  animation: enter 0.15s cubic-bezier(0.16, 1, 0.3, 1) both;\n}\n.dialogContent[data-state=\"closed\"] {\n  animation: exit 0.15s cubic-bezier(0.16, 1, 0.3, 1) both;\n}\n.dialogContent[data-state=\"open\"] {\n  animation-name: enter;\n  animation-duration: 150ms;\n  --tw-enter-opacity: initial;\n  --tw-enter-scale: initial;\n  --tw-enter-rotate: initial;\n  --tw-enter-translate-x: initial;\n  --tw-enter-translate-y: initial;\n}\n.dialogContent[data-state=\"closed\"] {\n  animation-name: exit;\n  animation-duration: 150ms;\n  --tw-exit-opacity: initial;\n  --tw-exit-scale: initial;\n  --tw-exit-rotate: initial;\n  --tw-exit-translate-x: initial;\n  --tw-exit-translate-y: initial;\n  --tw-exit-opacity: 0;\n}\n.dialogContent[data-state=\"open\"] {\n  --tw-enter-opacity: 0;\n}\n.dialogContent[data-state=\"closed\"] {\n  --tw-exit-scale: 0.95;\n}\n.dialogContent[data-state=\"open\"] {\n  --tw-enter-scale: 0.95;\n}\n.dialogContent[data-state=\"closed\"] {\n  --tw-exit-translate-x: -50%;\n  --tw-exit-translate-y: -48%;\n}\n.dialogContent[data-state=\"open\"] {\n  --tw-enter-translate-x: -50%;\n  --tw-enter-translate-y: -48%;\n}\n@media (min-width: 640px) {\n  .dialogContent {\n    border-radius: var(--radius);\n  }\n}\n.dialogContentClose {\n  position: absolute;\n  right: 1rem;\n  top: 1rem;\n  border-radius: calc(var(--radius) - 4px);\n  opacity: 0.7;\n  --tw-ring-offset-color: hsl(var(--background));\n  transition-property: opacity;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 150ms;\n}\n.dialogContentClose:hover {\n  opacity: 1;\n}\n.dialogContentClose:focus {\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0\n    var(--tw-ring-offset-width) var(--tw-ring-offset-color);\n  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0\n    calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);\n  box-shadow:\n    var(--tw-ring-offset-shadow), var(--tw-ring-shadow),\n    var(--tw-shadow, 0 0 #0000);\n  --tw-ring-color: hsl(var(--ring));\n  --tw-ring-offset-width: 2px;\n}\n.dialogContentClose:disabled {\n  pointer-events: none;\n}\n.dialogContentClose[data-state=\"open\"] {\n  background-color: hsl(var(--accent));\n  color: hsl(var(--muted-foreground));\n}\n.dialogContentCross2 {\n  height: 1rem;\n  width: 1rem;\n}\n.dialogContentSpan {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n}\n.dialogHeader {\n  display: flex;\n  flex-direction: column;\n}\n.dialogHeader > :not([hidden]) ~ :not([hidden]) {\n  --tw-space-y-reverse: 0;\n  margin-top: calc(0.375rem * calc(1 - var(--tw-space-y-reverse)));\n  margin-bottom: calc(0.375rem * var(--tw-space-y-reverse));\n}\n.dialogHeader {\n  text-align: center;\n}\n@media (min-width: 640px) {\n  .dialogHeader {\n    text-align: left;\n  }\n}\n.dialogFooter {\n  display: flex;\n  flex-direction: column-reverse;\n}\n@media (min-width: 640px) {\n  .dialogFooter {\n    flex-direction: row;\n    justify-content: flex-end;\n  }\n  .dialogFooter > :not([hidden]) ~ :not([hidden]) {\n    --tw-space-x-reverse: 0;\n    margin-right: calc(0.5rem * var(--tw-space-x-reverse));\n    margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));\n  }\n}\n.dialogTitle {\n  font-size: 1.125rem;\n  line-height: 1.75rem;\n  font-weight: 600;\n  line-height: 1;\n  letter-spacing: -0.025em;\n}\n.dialogDescription {\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  color: hsl(var(--muted-foreground));\n}\n@keyframes enter {\n  from {\n    opacity: var(--tw-enter-opacity, 1);\n    transform: translate3d(\n        var(--tw-enter-translate-x, 0),\n        var(--tw-enter-translate-y, 0),\n        0\n      )\n      scale3d(\n        var(--tw-enter-scale, 1),\n        var(--tw-enter-scale, 1),\n        var(--tw-enter-scale, 1)\n      )\n      rotate(var(--tw-enter-rotate, 0));\n  }\n  0% {\n    opacity: 0;\n    transform: scale(0.95);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n@keyframes exit {\n  to {\n    opacity: var(--tw-exit-opacity, 1);\n    transform: translate3d(\n        var(--tw-exit-translate-x, 0),\n        var(--tw-exit-translate-y, 0),\n        0\n      )\n      scale3d(\n        var(--tw-exit-scale, 1),\n        var(--tw-exit-scale, 1),\n        var(--tw-exit-scale, 1)\n      )\n      rotate(var(--tw-exit-rotate, 0));\n  }\n  0% {\n    opacity: 1;\n    transform: scale(1);\n  }\n  100% {\n    opacity: 0;\n    transform: scale(0.95);\n  }\n}\n@keyframes enter {\n  from {\n    opacity: var(--tw-enter-opacity, 1);\n    transform: translate3d(\n        var(--tw-enter-translate-x, 0),\n        var(--tw-enter-translate-y, 0),\n        0\n      )\n      scale3d(\n        var(--tw-enter-scale, 1),\n        var(--tw-enter-scale, 1),\n        var(--tw-enter-scale, 1)\n      )\n      rotate(var(--tw-enter-rotate, 0));\n  }\n  0% {\n    opacity: 0;\n    transform: scale(0.95);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n@keyframes exit {\n  to {\n    opacity: var(--tw-exit-opacity, 1);\n    transform: translate3d(\n        var(--tw-exit-translate-x, 0),\n        var(--tw-exit-translate-y, 0),\n        0\n      )\n      scale3d(\n        var(--tw-exit-scale, 1),\n        var(--tw-exit-scale, 1),\n        var(--tw-exit-scale, 1)\n      )\n      rotate(var(--tw-exit-rotate, 0));\n  }\n  0% {\n    opacity: 1;\n    transform: scale(1);\n  }\n  100% {\n    opacity: 0;\n    transform: scale(0.95);\n  }\n}\n"
    }
  ]
}