{
  "name": "menubar",
  "dependencies": [
    "@radix-ui/react-menubar"
  ],
  "registryDependencies": [],
  "type": "components:ui",
  "files": [
    {
      "type": "tsx",
      "name": "index.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport * as MenubarPrimitive from '@radix-ui/react-menubar';\nimport { Check, ChevronRight, Circle } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport styles from './menubar.module.css';\n\nconst MenubarMenu = MenubarPrimitive.Menu;\n\nconst MenubarGroup = MenubarPrimitive.Group;\n\nconst MenubarPortal = MenubarPrimitive.Portal;\n\nconst MenubarSub = MenubarPrimitive.Sub;\n\nconst MenubarRadioGroup = MenubarPrimitive.RadioGroup;\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(styles.menubar, className)}\n    {...props}\n  />\n));\nMenubar.displayName = MenubarPrimitive.Root.displayName;\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(styles.menubarTrigger, className)}\n    {...props}\n  />\n));\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName;\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean;\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      styles.menubarSubTrigger,\n      inset && styles.menubarSubTriggerInset,\n      className,\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className={styles.menubarSubTriggerChevronRight} />\n  </MenubarPrimitive.SubTrigger>\n));\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName;\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(styles.menubarSubContent, className)}\n    {...props}\n  />\n));\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName;\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = 'start', alignOffset = -4, sideOffset = 8, ...props },\n    ref,\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(styles.menubarContent, className)}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  ),\n);\nMenubarContent.displayName = MenubarPrimitive.Content.displayName;\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean;\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      styles.menubarItem,\n      inset && styles.menubarSubTriggerInset,\n      className,\n    )}\n    {...props}\n  />\n));\nMenubarItem.displayName = MenubarPrimitive.Item.displayName;\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(styles.menubarCheckboxItem, className)}\n    checked={checked}\n    {...props}\n  >\n    <span className={styles.menubarCheckboxItemSpan}>\n      <MenubarPrimitive.ItemIndicator>\n        <Check className={styles.menubarCheckboxItemCheck} />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n));\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName;\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(styles.menubarCheckboxItem, className)}\n    {...props}\n  >\n    <span className={styles.menubarCheckboxItemSpan}>\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className={styles.menubarRadioItemCircle} />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n));\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName;\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean;\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      styles.menubarLabel,\n      inset && styles.menubarSubTriggerInset,\n      className,\n    )}\n    {...props}\n  />\n));\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName;\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(styles.menubarSeparator, className)}\n    {...props}\n  />\n));\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName;\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return <span className={cn(styles.menubarShortcut, className)} {...props} />;\n};\nMenubarShortcut.displayname = 'MenubarShortcut';\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n};\n"
    },
    {
      "type": "css",
      "name": "menubar.module.css",
      "content": ".menubar {\n  display: flex;\n  height: 2.5rem;\n  align-items: center;\n}\n.menubar > :not([hidden]) ~ :not([hidden]) {\n  --tw-space-x-reverse: 0;\n  margin-right: calc(0.25rem * var(--tw-space-x-reverse));\n  margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));\n}\n.menubar {\n  border-radius: calc(var(--radius) - 2px);\n  border-width: 1px;\n  background-color: hsl(var(--background));\n  padding: 0.25rem;\n}\n.menubarTrigger {\n  display: flex;\n  cursor: default;\n  user-select: none;\n  align-items: center;\n  border-radius: calc(var(--radius) - 4px);\n  padding-left: 0.75rem;\n  padding-right: 0.75rem;\n  padding-top: 0.375rem;\n  padding-bottom: 0.375rem;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  font-weight: 500;\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n}\n.menubarTrigger:focus {\n  background-color: hsl(var(--accent));\n  color: hsl(var(--accent-foreground));\n}\n.menubarTrigger[data-state=\"open\"] {\n  background-color: hsl(var(--accent));\n  color: hsl(var(--accent-foreground));\n}\n.menubarSubTrigger {\n  display: flex;\n  cursor: default;\n  user-select: none;\n  align-items: center;\n  border-radius: calc(var(--radius) - 4px);\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n  padding-top: 0.375rem;\n  padding-bottom: 0.375rem;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n}\n.menubarSubTrigger:focus {\n  background-color: hsl(var(--accent));\n  color: hsl(var(--accent-foreground));\n}\n.menubarSubTrigger[data-state=\"open\"] {\n  background-color: hsl(var(--accent));\n  color: hsl(var(--accent-foreground));\n}\n.menubarSubTriggerInset {\n  padding-left: 2rem;\n}\n.menubarSubTriggerChevronRight {\n  margin-left: auto;\n  height: 1rem;\n  width: 1rem;\n}\n.menubarSubContent {\n  z-index: 50;\n  min-width: 8rem;\n  overflow: hidden;\n  border-radius: calc(var(--radius) - 2px);\n  border-width: 1px;\n  background-color: hsl(var(--popover));\n  padding: 0.25rem;\n  color: hsl(var(--popover-foreground));\n}\n.menubarSubContent[data-state=\"open\"] {\n  animation: enter 0.15s cubic-bezier(0.16, 1, 0.3, 1) both;\n}\n.menubarSubContent[data-state=\"closed\"] {\n  animation: exit 0.15s cubic-bezier(0.16, 1, 0.3, 1) both;\n}\n.menubarSubContent[data-state=\"open\"] {\n  animation-name: enter;\n  animation-duration: 150ms;\n  --tw-enter-opacity: initial;\n  --tw-enter-scale: initial;\n  --tw-enter-rotate: initial;\n  --tw-enter-translate-x: initial;\n  --tw-enter-translate-y: initial;\n}\n.menubarSubContent[data-state=\"closed\"] {\n  animation-name: exit;\n  animation-duration: 150ms;\n  --tw-exit-opacity: initial;\n  --tw-exit-scale: initial;\n  --tw-exit-rotate: initial;\n  --tw-exit-translate-x: initial;\n  --tw-exit-translate-y: initial;\n  --tw-exit-opacity: 0;\n}\n.menubarSubContent[data-state=\"open\"] {\n  --tw-enter-opacity: 0;\n}\n.menubarSubContent[data-state=\"closed\"] {\n  --tw-exit-scale: 0.95;\n}\n.menubarSubContent[data-state=\"open\"] {\n  --tw-enter-scale: 0.95;\n}\n.menubarSubContent[data-side=\"bottom\"] {\n  --tw-enter-translate-y: -0.5rem;\n}\n.menubarSubContent[data-side=\"left\"] {\n  --tw-enter-translate-x: 0.5rem;\n}\n.menubarSubContent[data-side=\"right\"] {\n  --tw-enter-translate-x: -0.5rem;\n}\n.menubarSubContent[data-side=\"top\"] {\n  --tw-enter-translate-y: 0.5rem;\n}\n.menubarContent {\n  z-index: 50;\n  min-width: 12rem;\n  overflow: hidden;\n  border-radius: calc(var(--radius) - 2px);\n  border-width: 1px;\n  background-color: hsl(var(--popover));\n  padding: 0.25rem;\n  color: hsl(var(--popover-foreground));\n  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);\n  --tw-shadow-colored:\n    0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);\n  box-shadow:\n    var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000),\n    var(--tw-shadow);\n}\n.menubarContent[data-state=\"open\"] {\n  animation: enter 0.15s cubic-bezier(0.16, 1, 0.3, 1) both;\n  animation-name: enter;\n  animation-duration: 150ms;\n  --tw-enter-opacity: initial;\n  --tw-enter-scale: initial;\n  --tw-enter-rotate: initial;\n  --tw-enter-translate-x: initial;\n  --tw-enter-translate-y: initial;\n}\n.menubarContent[data-state=\"closed\"] {\n  --tw-exit-opacity: 0;\n}\n.menubarContent[data-state=\"open\"] {\n  --tw-enter-opacity: 0;\n}\n.menubarContent[data-state=\"closed\"] {\n  --tw-exit-scale: 0.95;\n}\n.menubarContent[data-state=\"open\"] {\n  --tw-enter-scale: 0.95;\n}\n.menubarContent[data-side=\"bottom\"] {\n  --tw-enter-translate-y: -0.5rem;\n}\n.menubarContent[data-side=\"left\"] {\n  --tw-enter-translate-x: 0.5rem;\n}\n.menubarContent[data-side=\"right\"] {\n  --tw-enter-translate-x: -0.5rem;\n}\n.menubarContent[data-side=\"top\"] {\n  --tw-enter-translate-y: 0.5rem;\n}\n.menubarItem {\n  position: relative;\n  display: flex;\n  cursor: default;\n  user-select: none;\n  align-items: center;\n  border-radius: calc(var(--radius) - 4px);\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n  padding-top: 0.375rem;\n  padding-bottom: 0.375rem;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n}\n.menubarItem:focus {\n  background-color: hsl(var(--accent));\n  color: hsl(var(--accent-foreground));\n}\n.menubarItem[data-disabled] {\n  pointer-events: none;\n  opacity: 0.5;\n}\n.menubarCheckboxItem {\n  position: relative;\n  display: flex;\n  cursor: default;\n  user-select: none;\n  align-items: center;\n  border-radius: calc(var(--radius) - 4px);\n  padding-top: 0.375rem;\n  padding-bottom: 0.375rem;\n  padding-left: 2rem;\n  padding-right: 0.5rem;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n}\n.menubarCheckboxItem:focus {\n  background-color: hsl(var(--accent));\n  color: hsl(var(--accent-foreground));\n}\n.menubarCheckboxItem[data-disabled] {\n  pointer-events: none;\n  opacity: 0.5;\n}\n.menubarCheckboxItemSpan {\n  position: absolute;\n  left: 0.5rem;\n  display: flex;\n  height: 0.875rem;\n  width: 0.875rem;\n  align-items: center;\n  justify-content: center;\n}\n.menubarCheckboxItemCheck {\n  height: 1rem;\n  width: 1rem;\n}\n.menubarRadioItemCircle {\n  height: 0.5rem;\n  width: 0.5rem;\n  fill: currentColor;\n}\n.menubarLabel {\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n  padding-top: 0.375rem;\n  padding-bottom: 0.375rem;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  font-weight: 600;\n}\n.menubarSeparator {\n  margin-left: -0.25rem;\n  margin-right: -0.25rem;\n  margin-top: 0.25rem;\n  margin-bottom: 0.25rem;\n  height: 1px;\n  background-color: hsl(var(--muted));\n}\n.menubarShortcut {\n  margin-left: auto;\n  font-size: 0.75rem;\n  line-height: 1rem;\n  letter-spacing: 0.1em;\n  color: hsl(var(--muted-foreground));\n}\n@keyframes enter {\n  from {\n    opacity: var(--tw-enter-opacity, 1);\n    transform: translate3d(\n        var(--tw-enter-translate-x, 0),\n        var(--tw-enter-translate-y, 0),\n        0\n      )\n      scale3d(\n        var(--tw-enter-scale, 1),\n        var(--tw-enter-scale, 1),\n        var(--tw-enter-scale, 1)\n      )\n      rotate(var(--tw-enter-rotate, 0));\n  }\n  0% {\n    opacity: 0;\n    transform: scale(0.95);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n@keyframes exit {\n  to {\n    opacity: var(--tw-exit-opacity, 1);\n    transform: translate3d(\n        var(--tw-exit-translate-x, 0),\n        var(--tw-exit-translate-y, 0),\n        0\n      )\n      scale3d(\n        var(--tw-exit-scale, 1),\n        var(--tw-exit-scale, 1),\n        var(--tw-exit-scale, 1)\n      )\n      rotate(var(--tw-exit-rotate, 0));\n  }\n  0% {\n    opacity: 1;\n    transform: scale(1);\n  }\n  100% {\n    opacity: 0;\n    transform: scale(0.95);\n  }\n}\n@keyframes enter {\n  from {\n    opacity: var(--tw-enter-opacity, 1);\n    transform: translate3d(\n        var(--tw-enter-translate-x, 0),\n        var(--tw-enter-translate-y, 0),\n        0\n      )\n      scale3d(\n        var(--tw-enter-scale, 1),\n        var(--tw-enter-scale, 1),\n        var(--tw-enter-scale, 1)\n      )\n      rotate(var(--tw-enter-rotate, 0));\n  }\n  0% {\n    opacity: 0;\n    transform: scale(0.95);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n"
    }
  ]
}