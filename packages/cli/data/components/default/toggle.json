{
  "name": "toggle",
  "dependencies": [
    "@radix-ui/react-toggle"
  ],
  "registryDependencies": [],
  "type": "components:ui",
  "files": [
    {
      "type": "tsx",
      "name": "index",
      "content": "'use client';\n\nimport * as React from 'react';\nimport * as TogglePrimitive from '@radix-ui/react-toggle';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { cn } from '@/lib/utils';\nimport styles from './toggle.module.css';\n\nconst toggleVariants = cva(styles.toggleBase, {\n  variants: {\n    variant: {\n      default: styles.toggleDefault,\n      outline: styles.toggleOutline,\n    },\n    size: {\n      default: styles.toggleDefault,\n      sm: styles.toggleSm,\n      lg: styles.toggleLg,\n    },\n  },\n  defaultVariants: {\n    variant: 'default',\n    size: 'default',\n  },\n});\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(\n      cn(\n        toggleStyles[`toggleItem${'default'}`],\n        toggleStyles[`toggleItem${'default'}`],\n      ),\n    )}\n    {...props}\n  />\n));\nToggle.displayName = TogglePrimitive.Root.displayName;\n\nexport { Toggle, toggleVariants };\n"
    },
    {
      "type": "css",
      "name": "toggle.module",
      "content": ".toggleBase {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: calc(var(--radius) - 2px);\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  font-weight: 500;\n  --tw-ring-offset-color: hsl(var(--background));\n  transition-property:\n    color, background-color, border-color, text-decoration-color, fill, stroke;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 150ms;\n}\n.toggleBase:hover {\n  background-color: hsl(var(--muted));\n  color: hsl(var(--muted-foreground));\n}\n.toggleBase:focus-visible {\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0\n    var(--tw-ring-offset-width) var(--tw-ring-offset-color);\n  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0\n    calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);\n  box-shadow:\n    var(--tw-ring-offset-shadow), var(--tw-ring-shadow),\n    var(--tw-shadow, 0 0 #0000);\n  --tw-ring-color: hsl(var(--ring));\n  --tw-ring-offset-width: 2px;\n}\n.toggleBase:disabled {\n  pointer-events: none;\n  opacity: 0.5;\n}\n.toggleBase[data-state=\"on\"] {\n  background-color: hsl(var(--accent));\n  color: hsl(var(--accent-foreground));\n}\n.toggleDefault {\n  background-color: transparent;\n  height: 2.5rem;\n  padding-left: 0.75rem;\n  padding-right: 0.75rem;\n}\n.toggleOutline {\n  border-width: 1px;\n  border-color: hsl(var(--input));\n  background-color: transparent;\n}\n.toggleOutline:hover {\n  background-color: hsl(var(--accent));\n  color: hsl(var(--accent-foreground));\n}\n.toggleSm {\n  height: 2.25rem;\n  padding-left: 0.625rem;\n  padding-right: 0.625rem;\n}\n.toggleLg {\n  height: 2.75rem;\n  padding-left: 1.25rem;\n  padding-right: 1.25rem;\n}\n"
    }
  ]
}