{
  "name": "navigation-menu",
  "dependencies": [
    "@radix-ui/react-navigation-menu"
  ],
  "registryDependencies": [],
  "type": "components:ui",
  "files": [
    {
      "type": "tsx",
      "name": "index",
      "content": "import * as React from 'react';\nimport * as NavigationMenuPrimitive from '@radix-ui/react-navigation-menu';\nimport { cva } from 'class-variance-authority';\nimport { ChevronDown } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport styles from './navigation-menu.module.css';\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(styles.navigationMenu, className)}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n));\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName;\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(styles.navigationMenuList, className)}\n    {...props}\n  />\n));\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName;\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item;\n\nconst navigationMenuTriggerStyle = cva(styles.navigationMenuBase);\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), 'group', className)}\n    {...props}\n  >\n    {children}{' '}\n    <ChevronDown\n      className={styles.navigationMenuTriggerChevronDown}\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n));\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName;\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(styles.navigationMenuContent, className)}\n    {...props}\n  />\n));\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName;\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link;\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(styles.navigationMenuViewport)}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(styles.navigationMenuViewportViewport, className)}\n      ref={ref}\n      {...props}\n    />\n  </div>\n));\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName;\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(styles.navigationMenuIndicator, className)}\n    {...props}\n  >\n    <div className={styles.navigationMenuIndicatorDiv} />\n  </NavigationMenuPrimitive.Indicator>\n));\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName;\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n};\n"
    },
    {
      "type": "css",
      "name": "navigation-menu.module",
      "content": ".navigationMenuBase {\n  display: inline-flex;\n  height: 2.5rem;\n  width: max-content;\n  align-items: center;\n  justify-content: center;\n  border-radius: calc(var(--radius) - 2px);\n  background-color: hsl(var(--background));\n  padding-left: 1rem;\n  padding-right: 1rem;\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  font-weight: 500;\n  transition-property:\n    color, background-color, border-color, text-decoration-color, fill, stroke;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 150ms;\n}\n.navigationMenuBase:hover {\n  background-color: hsl(var(--accent));\n  color: hsl(var(--accent-foreground));\n}\n.navigationMenuBase:focus {\n  background-color: hsl(var(--accent));\n  color: hsl(var(--accent-foreground));\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n}\n.navigationMenuBase:disabled {\n  pointer-events: none;\n  opacity: 0.5;\n}\n.navigationMenuBase[data-active] {\n  background-color: hsl(var(--accent) / 0.5);\n}\n.navigationMenuBase[data-state=\"open\"] {\n  background-color: hsl(var(--accent) / 0.5);\n}\n.navigationMenu {\n  position: relative;\n  z-index: 10;\n  display: flex;\n  max-width: max-content;\n  flex: 1 1 0%;\n  align-items: center;\n  justify-content: center;\n}\n.navigationMenuList {\n  display: flex;\n  flex: 1 1 0%;\n  list-style-type: none;\n  align-items: center;\n  justify-content: center;\n}\n.navigationMenuList > :not([hidden]) ~ :not([hidden]) {\n  --tw-space-x-reverse: 0;\n  margin-right: calc(0.25rem * var(--tw-space-x-reverse));\n  margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));\n}\n.navigationMenuTriggerChevronDown {\n  position: relative;\n  top: 1px;\n  margin-left: 0.25rem;\n  height: 0.75rem;\n  width: 0.75rem;\n  transition-property:\n    color, background-color, border-color, text-decoration-color, fill, stroke,\n    opacity, box-shadow, transform, filter, backdrop-filter;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 200ms;\n  animation-duration: 200ms;\n}\n.navigationMenuBase[data-state=\"open\"] .navigationMenuTriggerChevronDown {\n  --tw-rotate: 180deg;\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y))\n    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))\n    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n}\n.navigationMenuContent {\n  left: 0px;\n  top: 0px;\n  width: 100%;\n}\n.navigationMenuContent[data-motion^=\"from-\"] {\n  animation: enter 0.15s cubic-bezier(0.16, 1, 0.3, 1) both;\n  animation-name: enter;\n  animation-duration: 150ms;\n  --tw-enter-opacity: initial;\n  --tw-enter-scale: initial;\n  --tw-enter-rotate: initial;\n  --tw-enter-translate-x: initial;\n  --tw-enter-translate-y: initial;\n  --tw-enter-opacity: 0;\n}\n.navigationMenuContent[data-motion^=\"to-\"] {\n  animation: exit 0.15s cubic-bezier(0.16, 1, 0.3, 1) both;\n  animation-name: exit;\n  animation-duration: 150ms;\n  --tw-exit-opacity: initial;\n  --tw-exit-scale: initial;\n  --tw-exit-rotate: initial;\n  --tw-exit-translate-x: initial;\n  --tw-exit-translate-y: initial;\n  --tw-exit-opacity: 0;\n}\n.navigationMenuContent[data-motion=\"from-end\"] {\n  --tw-enter-translate-x: 13rem;\n}\n.navigationMenuContent[data-motion=\"from-start\"] {\n  --tw-enter-translate-x: -13rem;\n}\n.navigationMenuContent[data-motion=\"to-end\"] {\n  --tw-exit-translate-x: 13rem;\n}\n.navigationMenuContent[data-motion=\"to-start\"] {\n  --tw-exit-translate-x: -13rem;\n}\n@media (min-width: 768px) {\n  .navigationMenuContent {\n    position: absolute;\n    width: auto;\n  }\n}\n.navigationMenuViewport {\n  position: absolute;\n  left: 0px;\n  top: 100%;\n  display: flex;\n  justify-content: center;\n}\n.navigationMenuViewportViewport {\n  position: relative;\n  margin-top: 0.375rem;\n  height: var(--radix-navigation-menu-viewport-height);\n  width: 100%;\n  overflow: hidden;\n  border-radius: calc(var(--radius) - 2px);\n  border-width: 1px;\n  background-color: hsl(var(--popover));\n  color: hsl(var(--popover-foreground));\n  --tw-shadow:\n    0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);\n  --tw-shadow-colored:\n    0 10px 15px -3px var(--tw-shadow-color),\n    0 4px 6px -4px var(--tw-shadow-color);\n  box-shadow:\n    var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000),\n    var(--tw-shadow);\n  transform-origin: top center;\n}\n.navigationMenuViewportViewport[data-state=\"open\"] {\n  animation: enter 0.15s cubic-bezier(0.16, 1, 0.3, 1) both;\n  animation-name: enter;\n  animation-duration: 150ms;\n  --tw-enter-opacity: initial;\n  --tw-enter-scale: initial;\n  --tw-enter-rotate: initial;\n  --tw-enter-translate-x: initial;\n  --tw-enter-translate-y: initial;\n  --tw-enter-scale: 0.9;\n}\n.navigationMenuViewportViewport[data-state=\"closed\"] {\n  animation: exit 0.15s cubic-bezier(0.16, 1, 0.3, 1) both;\n  animation-name: exit;\n  animation-duration: 150ms;\n  --tw-exit-opacity: initial;\n  --tw-exit-scale: initial;\n  --tw-exit-rotate: initial;\n  --tw-exit-translate-x: initial;\n  --tw-exit-translate-y: initial;\n  --tw-exit-scale: 0.95;\n}\n@media (min-width: 768px) {\n  .navigationMenuViewportViewport {\n    width: var(--radix-navigation-menu-viewport-width);\n  }\n}\n.navigationMenuIndicator {\n  top: 100%;\n  z-index: 1;\n  display: flex;\n  height: 0.375rem;\n  align-items: flex-end;\n  justify-content: center;\n  overflow: hidden;\n}\n.navigationMenuIndicator[data-state=\"visible\"] {\n  animation: enter 0.15s cubic-bezier(0.16, 1, 0.3, 1) both;\n  animation-name: enter;\n  animation-duration: 150ms;\n  --tw-enter-opacity: initial;\n  --tw-enter-scale: initial;\n  --tw-enter-rotate: initial;\n  --tw-enter-translate-x: initial;\n  --tw-enter-translate-y: initial;\n  --tw-enter-opacity: 0;\n}\n.navigationMenuIndicator[data-state=\"hidden\"] {\n  animation: exit 0.15s cubic-bezier(0.16, 1, 0.3, 1) both;\n  animation-name: exit;\n  animation-duration: 150ms;\n  --tw-exit-opacity: initial;\n  --tw-exit-scale: initial;\n  --tw-exit-rotate: initial;\n  --tw-exit-translate-x: initial;\n  --tw-exit-translate-y: initial;\n  --tw-exit-opacity: 0;\n}\n.navigationMenuIndicatorDiv {\n  position: relative;\n  top: 60%;\n  height: 0.5rem;\n  width: 0.5rem;\n  --tw-rotate: 45deg;\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y))\n    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))\n    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n  border-top-left-radius: calc(var(--radius) - 4px);\n  background-color: hsl(var(--border));\n  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);\n  --tw-shadow-colored:\n    0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);\n  box-shadow:\n    var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000),\n    var(--tw-shadow);\n}\n@keyframes enter {\n  from {\n    opacity: var(--tw-enter-opacity, 1);\n    transform: translate3d(\n        var(--tw-enter-translate-x, 0),\n        var(--tw-enter-translate-y, 0),\n        0\n      )\n      scale3d(\n        var(--tw-enter-scale, 1),\n        var(--tw-enter-scale, 1),\n        var(--tw-enter-scale, 1)\n      )\n      rotate(var(--tw-enter-rotate, 0));\n    opacity: var(--tw-enter-opacity, 1);\n    transform: translate3d(\n        var(--tw-enter-translate-x, 0),\n        var(--tw-enter-translate-y, 0),\n        0\n      )\n      scale3d(\n        var(--tw-enter-scale, 1),\n        var(--tw-enter-scale, 1),\n        var(--tw-enter-scale, 1)\n      )\n      rotate(var(--tw-enter-rotate, 0));\n    opacity: var(--tw-enter-opacity, 1);\n    transform: translate3d(\n        var(--tw-enter-translate-x, 0),\n        var(--tw-enter-translate-y, 0),\n        0\n      )\n      scale3d(\n        var(--tw-enter-scale, 1),\n        var(--tw-enter-scale, 1),\n        var(--tw-enter-scale, 1)\n      )\n      rotate(var(--tw-enter-rotate, 0));\n  }\n  0% {\n    opacity: 0;\n    transform: scale(0.95);\n    opacity: 0;\n    transform: scale(0.95);\n    opacity: 0;\n    transform: scale(0.95);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n    opacity: 1;\n    transform: scale(1);\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n@keyframes exit {\n  to {\n    opacity: var(--tw-exit-opacity, 1);\n    transform: translate3d(\n        var(--tw-exit-translate-x, 0),\n        var(--tw-exit-translate-y, 0),\n        0\n      )\n      scale3d(\n        var(--tw-exit-scale, 1),\n        var(--tw-exit-scale, 1),\n        var(--tw-exit-scale, 1)\n      )\n      rotate(var(--tw-exit-rotate, 0));\n    opacity: var(--tw-exit-opacity, 1);\n    transform: translate3d(\n        var(--tw-exit-translate-x, 0),\n        var(--tw-exit-translate-y, 0),\n        0\n      )\n      scale3d(\n        var(--tw-exit-scale, 1),\n        var(--tw-exit-scale, 1),\n        var(--tw-exit-scale, 1)\n      )\n      rotate(var(--tw-exit-rotate, 0));\n    opacity: var(--tw-exit-opacity, 1);\n    transform: translate3d(\n        var(--tw-exit-translate-x, 0),\n        var(--tw-exit-translate-y, 0),\n        0\n      )\n      scale3d(\n        var(--tw-exit-scale, 1),\n        var(--tw-exit-scale, 1),\n        var(--tw-exit-scale, 1)\n      )\n      rotate(var(--tw-exit-rotate, 0));\n  }\n  0% {\n    opacity: 1;\n    transform: scale(1);\n    opacity: 1;\n    transform: scale(1);\n    opacity: 1;\n    transform: scale(1);\n  }\n  100% {\n    opacity: 0;\n    transform: scale(0.95);\n    opacity: 0;\n    transform: scale(0.95);\n    opacity: 0;\n    transform: scale(0.95);\n  }\n}\n"
    }
  ]
}