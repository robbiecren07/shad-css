{
  "name": "checkbox",
  "dependencies": [
    "@radix-ui/react-checkbox"
  ],
  "type": "components:ui",
  "files": [
    {
      "type": "tsx",
      "name": "index.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport * as CheckboxPrimitive from '@radix-ui/react-checkbox';\nimport { Check } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport styles from './checkbox.module.css';\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(styles.checkbox, className)}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator className={cn(styles.checkboxIndicator)}>\n      <Check className={styles.checkboxCheck} />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n));\nCheckbox.displayName = CheckboxPrimitive.Root.displayName;\n\nexport { Checkbox };\n"
    },
    {
      "type": "css",
      "name": "checkbox.module.css",
      "content": ".checkbox {\n  height: 1rem;\n  width: 1rem;\n  flex-shrink: 0;\n  border-radius: calc(var(--radius) - 4px);\n  border-width: 1px;\n  border-color: hsl(var(--primary));\n}\n.checkbox:focus-visible {\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n  box-shadow:\n    0 0 0 2px #fff,\n    0 0 0 calc(2px + 2px) hsl(var(--ring)),\n    0 0 #0000;\n}\n.checkbox:disabled {\n  cursor: not-allowed;\n  opacity: 0.5;\n}\n.checkbox[data-state=\"checked\"] {\n  background-color: hsl(var(--primary));\n  color: hsl(var(--primary-foreground));\n}\n.checkboxIndicator {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: currentColor;\n}\n.checkboxCheck {\n  height: 1rem;\n  width: 1rem;\n}\n"
    }
  ]
}