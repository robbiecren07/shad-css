{
  "name": "context-menu",
  "dependencies": [
    "@radix-ui/react-context-menu"
  ],
  "registryDependencies": [],
  "type": "components:ui",
  "files": [
    {
      "type": "tsx",
      "name": "index.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport * as ContextMenuPrimitive from '@radix-ui/react-context-menu';\nimport { Check, ChevronRight, Circle } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport styles from './context-menu.module.css';\n\nconst ContextMenu = ContextMenuPrimitive.Root;\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger;\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group;\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal;\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub;\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup;\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean;\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      styles.contextMenuSubTrigger,\n      inset && styles.contextMenuSubTriggerInset,\n      className,\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className={styles.contextMenuSubTriggerChevronRight} />\n  </ContextMenuPrimitive.SubTrigger>\n));\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName;\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(styles.contextMenuSubContent, className)}\n    {...props}\n  />\n));\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName;\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(styles.contextMenuContent, className)}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n));\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName;\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean;\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      styles.contextMenuItem,\n      inset && styles.contextMenuSubTriggerInset,\n      className,\n    )}\n    {...props}\n  />\n));\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName;\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(styles.contextMenuCheckboxItem, className)}\n    checked={checked}\n    {...props}\n  >\n    <span className={styles.contextMenuCheckboxItemSpan}>\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className={styles.contextMenuCheckboxItemCheck} />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n));\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName;\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(styles.contextMenuCheckboxItem, className)}\n    {...props}\n  >\n    <span className={styles.contextMenuCheckboxItemSpan}>\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className={styles.contextMenuRadioItemCircle} />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n));\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName;\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean;\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      styles.contextMenuLabel,\n      inset && styles.contextMenuSubTriggerInset,\n      className,\n    )}\n    {...props}\n  />\n));\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName;\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(styles.contextMenuSeparator, className)}\n    {...props}\n  />\n));\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName;\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span className={cn(styles.contextMenuShortcut, className)} {...props} />\n  );\n};\nContextMenuShortcut.displayName = 'ContextMenuShortcut';\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n};\n"
    },
    {
      "type": "css",
      "name": "context-menu.module.css",
      "content": ".contextMenuSubTrigger {\n  display: flex;\n  cursor: default;\n  user-select: none;\n  align-items: center;\n  border-radius: calc(var(--radius) - 4px);\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n  padding-top: 0.375rem;\n  padding-bottom: 0.375rem;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n}\n.contextMenuSubTrigger:focus {\n  background-color: hsl(var(--accent));\n  color: hsl(var(--accent-foreground));\n}\n.contextMenuSubTrigger[data-state=\"open\"] {\n  background-color: hsl(var(--accent));\n  color: hsl(var(--accent-foreground));\n}\n.contextMenuSubTriggerInset {\n  padding-left: 2rem;\n}\n.contextMenuSubTriggerChevronRight {\n  margin-left: auto;\n  height: 1rem;\n  width: 1rem;\n}\n.contextMenuSubContent {\n  z-index: 50;\n  min-width: 8rem;\n  overflow: hidden;\n  border-radius: calc(var(--radius) - 2px);\n  border-width: 1px;\n  background-color: hsl(var(--popover));\n  padding: 0.25rem;\n  color: hsl(var(--popover-foreground));\n  box-shadow:\n    0 0 #0000,\n    0 0 #0000,\n    0 4px 6px -1px rgb(0 0 0 / 0.1),\n    0 2px 4px -2px rgb(0 0 0 / 0.1);\n}\n.contextMenuSubContent[data-state=\"open\"] {\n  animation-name: enter;\n  animation-duration: 150ms;\n}\n.contextMenuSubContent[data-state=\"closed\"] {\n  animation-name: exit;\n  animation-duration: 150ms;\n}\n.contextMenuSubContent[data-state=\"open\"] {\n}\n.contextMenuSubContent[data-state=\"closed\"] {\n}\n.contextMenuSubContent[data-state=\"open\"] {\n}\n.contextMenuSubContent[data-side=\"bottom\"] {\n}\n.contextMenuSubContent[data-side=\"left\"] {\n}\n.contextMenuSubContent[data-side=\"right\"] {\n}\n.contextMenuSubContent[data-side=\"top\"] {\n}\n.contextMenuContent {\n  z-index: 50;\n  min-width: 8rem;\n  overflow: hidden;\n  border-radius: calc(var(--radius) - 2px);\n  border-width: 1px;\n  background-color: hsl(var(--popover));\n  padding: 0.25rem;\n  color: hsl(var(--popover-foreground));\n  box-shadow:\n    0 0 #0000,\n    0 0 #0000,\n    0 4px 6px -1px rgb(0 0 0 / 0.1),\n    0 2px 4px -2px rgb(0 0 0 / 0.1);\n  animation-name: enter;\n  animation-duration: 150ms;\n}\n.contextMenuContent[data-state=\"open\"] {\n  animation-name: enter;\n  animation-duration: 150ms;\n}\n.contextMenuContent[data-state=\"closed\"] {\n  animation-name: exit;\n  animation-duration: 150ms;\n}\n.contextMenuContent[data-state=\"open\"] {\n}\n.contextMenuContent[data-state=\"closed\"] {\n}\n.contextMenuContent[data-state=\"open\"] {\n}\n.contextMenuContent[data-side=\"bottom\"] {\n}\n.contextMenuContent[data-side=\"left\"] {\n}\n.contextMenuContent[data-side=\"right\"] {\n}\n.contextMenuContent[data-side=\"top\"] {\n}\n.contextMenuItem {\n  position: relative;\n  display: flex;\n  cursor: default;\n  user-select: none;\n  align-items: center;\n  border-radius: calc(var(--radius) - 4px);\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n  padding-top: 0.375rem;\n  padding-bottom: 0.375rem;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n}\n.contextMenuItem:focus {\n  background-color: hsl(var(--accent));\n  color: hsl(var(--accent-foreground));\n}\n.contextMenuItem[data-disabled] {\n  pointer-events: none;\n  opacity: 0.5;\n}\n.contextMenuCheckboxItem {\n  position: relative;\n  display: flex;\n  cursor: default;\n  user-select: none;\n  align-items: center;\n  border-radius: calc(var(--radius) - 4px);\n  padding-top: 0.375rem;\n  padding-bottom: 0.375rem;\n  padding-left: 2rem;\n  padding-right: 0.5rem;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n}\n.contextMenuCheckboxItem:focus {\n  background-color: hsl(var(--accent));\n  color: hsl(var(--accent-foreground));\n}\n.contextMenuCheckboxItem[data-disabled] {\n  pointer-events: none;\n  opacity: 0.5;\n}\n.contextMenuCheckboxItemSpan {\n  position: absolute;\n  left: 0.5rem;\n  display: flex;\n  height: 0.875rem;\n  width: 0.875rem;\n  align-items: center;\n  justify-content: center;\n}\n.contextMenuCheckboxItemCheck {\n  height: 1rem;\n  width: 1rem;\n}\n.contextMenuRadioItemCircle {\n  height: 0.5rem;\n  width: 0.5rem;\n  fill: currentColor;\n}\n.contextMenuLabel {\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n  padding-top: 0.375rem;\n  padding-bottom: 0.375rem;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  font-weight: 600;\n  color: hsl(var(--foreground));\n}\n.contextMenuSeparator {\n  margin-left: -0.25rem;\n  margin-right: -0.25rem;\n  margin-top: 0.25rem;\n  margin-bottom: 0.25rem;\n  height: 1px;\n  background-color: hsl(var(--border));\n}\n.contextMenuShortcut {\n  margin-left: auto;\n  font-size: 0.75rem;\n  line-height: 1rem;\n  letter-spacing: 0.1em;\n  color: hsl(var(--muted-foreground));\n}\n"
    }
  ]
}