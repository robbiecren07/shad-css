{
  "name": "dialog",
  "dependencies": [
    "@radix-ui/react-dialog"
  ],
  "registryDependencies": [],
  "type": "components:ui",
  "files": [
    {
      "type": "tsx",
      "name": "index.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport * as DialogPrimitive from '@radix-ui/react-dialog';\nimport { X } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport styles from './dialog.module.css';\n\nconst Dialog = DialogPrimitive.Root;\n\nconst DialogTrigger = DialogPrimitive.Trigger;\n\nconst DialogPortal = DialogPrimitive.Portal;\n\nconst DialogClose = DialogPrimitive.Close;\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(styles.dialogOverlay, className)}\n    {...props}\n  />\n));\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName;\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(styles.dialogContent, className)}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className={styles.dialogContentClose}>\n        <X className={styles.dialogContentX} />\n        <span className={styles.dialogContentSpan}>Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n));\nDialogContent.displayName = DialogPrimitive.Content.displayName;\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div className={cn(styles.dialogHeader, className)} {...props} />\n);\nDialogHeader.displayName = 'DialogHeader';\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div className={cn(styles.dialogFooter, className)} {...props} />\n);\nDialogFooter.displayName = 'DialogFooter';\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(styles.dialogTitle, className)}\n    {...props}\n  />\n));\nDialogTitle.displayName = DialogPrimitive.Title.displayName;\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(styles.dialogDescription, className)}\n    {...props}\n  />\n));\nDialogDescription.displayName = DialogPrimitive.Description.displayName;\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n};\n"
    },
    {
      "type": "css",
      "name": "dialog.module.css",
      "content": ".dialogOverlay {\n  position: fixed;\n  inset: 0px;\n  z-index: 50;\n  background-color: rgb(0 0 0 / 0.8);\n}\n.dialogOverlay[data-state=\"open\"] {\n  animation-name: enter;\n  animation-duration: 150ms;\n}\n.dialogOverlay[data-state=\"closed\"] {\n  animation-name: exit;\n  animation-duration: 150ms;\n}\n.dialogOverlay[data-state=\"open\"] {\n}\n.dialogContent {\n  position: fixed;\n  left: 50%;\n  top: 50%;\n  z-index: 50;\n  display: grid;\n  width: 100%;\n  max-width: 32rem;\n  transform: translate(-50%, -50%) rotate(0) skewX(0) skewY(0) scaleX(1)\n    scaleY(1);\n  gap: 1rem;\n  border-width: 1px;\n  background-color: hsl(var(--background));\n  padding: 1.5rem;\n  box-shadow:\n    0 0 #0000,\n    0 0 #0000,\n    0 10px 15px -3px rgb(0 0 0 / 0.1),\n    0 4px 6px -4px rgb(0 0 0 / 0.1);\n  transition-duration: 200ms;\n  animation-duration: 200ms;\n}\n.dialogContent[data-state=\"open\"] {\n  animation-name: enter;\n  animation-duration: 150ms;\n}\n.dialogContent[data-state=\"closed\"] {\n  animation-name: exit;\n  animation-duration: 150ms;\n}\n.dialogContent[data-state=\"open\"] {\n}\n.dialogContent[data-state=\"closed\"] {\n}\n.dialogContent[data-state=\"open\"] {\n}\n.dialogContent[data-state=\"closed\"] {\n}\n.dialogContent[data-state=\"open\"] {\n}\n@media (min-width: 640px) {\n  .dialogContent {\n    border-radius: var(--radius);\n  }\n}\n.dialogContentClose {\n  position: absolute;\n  right: 1rem;\n  top: 1rem;\n  border-radius: calc(var(--radius) - 4px);\n  opacity: 0.7;\n  transition-property: opacity;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 150ms;\n}\n.dialogContentClose:hover {\n  opacity: 1;\n}\n.dialogContentClose:focus {\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n  box-shadow:\n    0 0 0 2px #fff,\n    0 0 0 calc(2px + 2px) hsl(var(--ring)),\n    0 0 #0000;\n}\n.dialogContentClose:disabled {\n  pointer-events: none;\n}\n.dialogContentClose[data-state=\"open\"] {\n  background-color: hsl(var(--accent));\n  color: hsl(var(--muted-foreground));\n}\n.dialogContentX {\n  height: 1rem;\n  width: 1rem;\n}\n.dialogContentSpan {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n}\n.dialogHeader {\n  display: flex;\n  flex-direction: column;\n}\n.dialogHeader > :not([hidden]) ~ :not([hidden]) {\n  margin-top: calc(0.375rem * calc(1 - 0));\n  margin-bottom: calc(0.375rem * 0);\n}\n.dialogHeader {\n  text-align: center;\n}\n@media (min-width: 640px) {\n  .dialogHeader {\n    text-align: left;\n  }\n}\n.dialogFooter {\n  display: flex;\n  flex-direction: column-reverse;\n}\n@media (min-width: 640px) {\n  .dialogFooter {\n    flex-direction: row;\n    justify-content: flex-end;\n  }\n  .dialogFooter > :not([hidden]) ~ :not([hidden]) {\n    margin-right: calc(0.5rem * 0);\n    margin-left: calc(0.5rem * calc(1 - 0));\n  }\n}\n.dialogTitle {\n  font-size: 1.125rem;\n  line-height: 1.75rem;\n  font-weight: 600;\n  line-height: 1;\n  letter-spacing: -0.025em;\n}\n.dialogDescription {\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  color: hsl(var(--muted-foreground));\n}\n"
    }
  ]
}