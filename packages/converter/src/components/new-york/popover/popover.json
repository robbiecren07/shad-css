{
  "name": "popover",
  "dependencies": [
    "@radix-ui/react-popover"
  ],
  "registryDependencies": [],
  "type": "components:ui",
  "files": [
    {
      "type": "tsx",
      "name": "index",
      "content": "'use client';\n\nimport * as React from 'react';\nimport * as PopoverPrimitive from '@radix-ui/react-popover';\nimport { cn } from '@/lib/utils';\nimport styles from './popover.module.css';\n\nconst Popover = PopoverPrimitive.Root;\n\nconst PopoverTrigger = PopoverPrimitive.Trigger;\n\nconst PopoverAnchor = PopoverPrimitive.Anchor;\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = 'center', sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(styles.popoverContent, className)}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n));\nPopoverContent.displayName = PopoverPrimitive.Content.displayName;\n\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor };\n"
    },
    {
      "type": "css",
      "name": "popover.module",
      "content": ".popoverContent {\n  z-index: 50;\n  width: 18rem;\n  transform-origin: var(--radix-popover-content-transform-origin);\n  border-radius: calc(var(--radius) - 2px);\n  border-width: 1px;\n  background-color: hsl(var(--popover));\n  padding: 1rem;\n  color: hsl(var(--popover-foreground));\n  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);\n  --tw-shadow-colored:\n    0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);\n  box-shadow:\n    var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000),\n    var(--tw-shadow);\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n}\n.popoverContent[data-state=\"open\"] {\n  animation: enter 0.15s cubic-bezier(0.16, 1, 0.3, 1) both;\n}\n.popoverContent[data-state=\"closed\"] {\n  animation: exit 0.15s cubic-bezier(0.16, 1, 0.3, 1) both;\n}\n.popoverContent[data-state=\"open\"] {\n  animation-name: enter;\n  animation-duration: 150ms;\n  --tw-enter-opacity: initial;\n  --tw-enter-scale: initial;\n  --tw-enter-rotate: initial;\n  --tw-enter-translate-x: initial;\n  --tw-enter-translate-y: initial;\n}\n.popoverContent[data-state=\"closed\"] {\n  animation-name: exit;\n  animation-duration: 150ms;\n  --tw-exit-opacity: initial;\n  --tw-exit-scale: initial;\n  --tw-exit-rotate: initial;\n  --tw-exit-translate-x: initial;\n  --tw-exit-translate-y: initial;\n  --tw-exit-opacity: 0;\n}\n.popoverContent[data-state=\"open\"] {\n  --tw-enter-opacity: 0;\n}\n.popoverContent[data-state=\"closed\"] {\n  --tw-exit-scale: 0.95;\n}\n.popoverContent[data-state=\"open\"] {\n  --tw-enter-scale: 0.95;\n}\n.popoverContent[data-side=\"bottom\"] {\n  --tw-enter-translate-y: -0.5rem;\n}\n.popoverContent[data-side=\"left\"] {\n  --tw-enter-translate-x: 0.5rem;\n}\n.popoverContent[data-side=\"right\"] {\n  --tw-enter-translate-x: -0.5rem;\n}\n.popoverContent[data-side=\"top\"] {\n  --tw-enter-translate-y: 0.5rem;\n}\n@keyframes enter {\n  from {\n    opacity: var(--tw-enter-opacity, 1);\n    transform: translate3d(\n        var(--tw-enter-translate-x, 0),\n        var(--tw-enter-translate-y, 0),\n        0\n      )\n      scale3d(\n        var(--tw-enter-scale, 1),\n        var(--tw-enter-scale, 1),\n        var(--tw-enter-scale, 1)\n      )\n      rotate(var(--tw-enter-rotate, 0));\n  }\n  0% {\n    opacity: 0;\n    transform: scale(0.95);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n@keyframes exit {\n  to {\n    opacity: var(--tw-exit-opacity, 1);\n    transform: translate3d(\n        var(--tw-exit-translate-x, 0),\n        var(--tw-exit-translate-y, 0),\n        0\n      )\n      scale3d(\n        var(--tw-exit-scale, 1),\n        var(--tw-exit-scale, 1),\n        var(--tw-exit-scale, 1)\n      )\n      rotate(var(--tw-exit-rotate, 0));\n  }\n  0% {\n    opacity: 1;\n    transform: scale(1);\n  }\n  100% {\n    opacity: 0;\n    transform: scale(0.95);\n  }\n}\n"
    }
  ]
}