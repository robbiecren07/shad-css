.navigationMenuBase {
  display: inline-flex;
  height: 2.25rem;
  width: max-content;
  align-items: center;
  justify-content: center;
  border-radius: calc(var(--radius) - 2px);
  background-color: hsl(var(--background));
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 500;
  transition-property:
    color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.navigationMenuBase:hover {
  background-color: hsl(var(--accent));
  color: hsl(var(--accent-foreground));
}
.navigationMenuBase:focus {
  background-color: hsl(var(--accent));
  color: hsl(var(--accent-foreground));
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.navigationMenuBase:disabled {
  pointer-events: none;
  opacity: 0.5;
}
.navigationMenuBase[data-active] {
  background-color: hsl(var(--accent) / 0.5);
}
.navigationMenuBase[data-state="open"] {
  background-color: hsl(var(--accent) / 0.5);
}
.navigationMenu {
  position: relative;
  z-index: 10;
  display: flex;
  max-width: max-content;
  flex: 1 1 0%;
  align-items: center;
  justify-content: center;
}
.navigationMenuList {
  display: flex;
  flex: 1 1 0%;
  list-style-type: none;
  align-items: center;
  justify-content: center;
}
.navigationMenuList > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.25rem * var(--tw-space-x-reverse));
  margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));
}
.navigationMenuTriggerChevronDown {
  position: relative;
  top: 1px;
  margin-left: 0.25rem;
  height: 0.75rem;
  width: 0.75rem;
  transition-property:
    color, background-color, border-color, text-decoration-color, fill, stroke,
    opacity, box-shadow, transform, filter, backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
  animation-duration: 300ms;
}
.group[data-state="open"] .navigationMenuTriggerChevronDown {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.navigationMenuContent {
  left: 0px;
  top: 0px;
  width: 100%;
}
.navigationMenuContent[data-motion^="from-"] {
  animation: enter 0.15s cubic-bezier(0.16, 1, 0.3, 1) both;
}
.navigationMenuContent[data-motion^="to-"] {
  animation: exit 0.15s cubic-bezier(0.16, 1, 0.3, 1) both;
}
.navigationMenuContent[data-motion^="from-"] {
  animation-name: enter;
  animation-duration: 150ms;
  --tw-enter-opacity: initial;
  --tw-enter-scale: initial;
  --tw-enter-rotate: initial;
  --tw-enter-translate-x: initial;
  --tw-enter-translate-y: initial;
}
.navigationMenuContent[data-motion^="to-"] {
  animation-name: exit;
  animation-duration: 150ms;
  --tw-exit-opacity: initial;
  --tw-exit-scale: initial;
  --tw-exit-rotate: initial;
  --tw-exit-translate-x: initial;
  --tw-exit-translate-y: initial;
}
.navigationMenuContent[data-motion^="from-"] {
  --tw-enter-opacity: 0;
}
.navigationMenuContent[data-motion^="to-"] {
  --tw-exit-opacity: 0;
}
.navigationMenuContent[data-motion="from-end"] {
  --tw-enter-translate-x: 13rem;
}
.navigationMenuContent[data-motion="from-start"] {
  --tw-enter-translate-x: -13rem;
}
.navigationMenuContent[data-motion="to-end"] {
  --tw-exit-translate-x: 13rem;
}
.navigationMenuContent[data-motion="to-start"] {
  --tw-exit-translate-x: -13rem;
}
@media (min-width: 768px) {
  .navigationMenuContent {
    position: absolute;
    width: auto;
  }
}
.navigationMenuViewport {
  position: absolute;
  left: 0px;
  top: 100%;
  display: flex;
  justify-content: center;
}
.navigationMenuViewportViewport {
  position: relative;
  margin-top: 0.375rem;
  height: var(--radix-navigation-menu-viewport-height);
  width: 100%;
  overflow: hidden;
  border-radius: calc(var(--radius) - 2px);
  border-width: 1px;
  background-color: hsl(var(--popover));
  color: hsl(var(--popover-foreground));
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored:
    0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow:
    var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000),
    var(--tw-shadow);
  transform-origin: top center;
}
.navigationMenuViewportViewport[data-state="open"] {
  animation: enter 0.15s cubic-bezier(0.16, 1, 0.3, 1) both;
}
.navigationMenuViewportViewport[data-state="closed"] {
  animation: exit 0.15s cubic-bezier(0.16, 1, 0.3, 1) both;
}
.navigationMenuViewportViewport[data-state="open"] {
  animation-name: enter;
  animation-duration: 150ms;
  --tw-enter-opacity: initial;
  --tw-enter-scale: initial;
  --tw-enter-rotate: initial;
  --tw-enter-translate-x: initial;
  --tw-enter-translate-y: initial;
}
.navigationMenuViewportViewport[data-state="closed"] {
  animation-name: exit;
  animation-duration: 150ms;
  --tw-exit-opacity: initial;
  --tw-exit-scale: initial;
  --tw-exit-rotate: initial;
  --tw-exit-translate-x: initial;
  --tw-exit-translate-y: initial;
  --tw-exit-scale: 0.95;
}
.navigationMenuViewportViewport[data-state="open"] {
  --tw-enter-scale: 0.9;
}
@media (min-width: 768px) {
  .navigationMenuViewportViewport {
    width: var(--radix-navigation-menu-viewport-width);
  }
}
.navigationMenuIndicator {
  top: 100%;
  z-index: 1;
  display: flex;
  height: 0.375rem;
  align-items: flex-end;
  justify-content: center;
  overflow: hidden;
}
.navigationMenuIndicator[data-state="visible"] {
  animation: enter 0.15s cubic-bezier(0.16, 1, 0.3, 1) both;
}
.navigationMenuIndicator[data-state="hidden"] {
  animation: exit 0.15s cubic-bezier(0.16, 1, 0.3, 1) both;
}
.navigationMenuIndicator[data-state="visible"] {
  animation-name: enter;
  animation-duration: 150ms;
  --tw-enter-opacity: initial;
  --tw-enter-scale: initial;
  --tw-enter-rotate: initial;
  --tw-enter-translate-x: initial;
  --tw-enter-translate-y: initial;
}
.navigationMenuIndicator[data-state="hidden"] {
  animation-name: exit;
  animation-duration: 150ms;
  --tw-exit-opacity: initial;
  --tw-exit-scale: initial;
  --tw-exit-rotate: initial;
  --tw-exit-translate-x: initial;
  --tw-exit-translate-y: initial;
  --tw-exit-opacity: 0;
}
.navigationMenuIndicator[data-state="visible"] {
  --tw-enter-opacity: 0;
}
.navigationMenuIndicatorDiv {
  position: relative;
  top: 60%;
  height: 0.5rem;
  width: 0.5rem;
  --tw-rotate: 45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-top-left-radius: calc(var(--radius) - 4px);
  background-color: hsl(var(--border));
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored:
    0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow:
    var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000),
    var(--tw-shadow);
}
@keyframes enter {
  from {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(
        var(--tw-enter-translate-x, 0),
        var(--tw-enter-translate-y, 0),
        0
      )
      scale3d(
        var(--tw-enter-scale, 1),
        var(--tw-enter-scale, 1),
        var(--tw-enter-scale, 1)
      )
      rotate(var(--tw-enter-rotate, 0));
  }
  0% {
    opacity: 0;
    transform: scale(0.95);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}
@keyframes exit {
  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(
        var(--tw-exit-translate-x, 0),
        var(--tw-exit-translate-y, 0),
        0
      )
      scale3d(
        var(--tw-exit-scale, 1),
        var(--tw-exit-scale, 1),
        var(--tw-exit-scale, 1)
      )
      rotate(var(--tw-exit-rotate, 0));
  }
  0% {
    opacity: 1;
    transform: scale(1);
  }
  100% {
    opacity: 0;
    transform: scale(0.95);
  }
}
@keyframes enter {
  from {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(
        var(--tw-enter-translate-x, 0),
        var(--tw-enter-translate-y, 0),
        0
      )
      scale3d(
        var(--tw-enter-scale, 1),
        var(--tw-enter-scale, 1),
        var(--tw-enter-scale, 1)
      )
      rotate(var(--tw-enter-rotate, 0));
  }
  0% {
    opacity: 0;
    transform: scale(0.95);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}
@keyframes exit {
  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(
        var(--tw-exit-translate-x, 0),
        var(--tw-exit-translate-y, 0),
        0
      )
      scale3d(
        var(--tw-exit-scale, 1),
        var(--tw-exit-scale, 1),
        var(--tw-exit-scale, 1)
      )
      rotate(var(--tw-exit-rotate, 0));
  }
  0% {
    opacity: 1;
    transform: scale(1);
  }
  100% {
    opacity: 0;
    transform: scale(0.95);
  }
}
@keyframes enter {
  from {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(
        var(--tw-enter-translate-x, 0),
        var(--tw-enter-translate-y, 0),
        0
      )
      scale3d(
        var(--tw-enter-scale, 1),
        var(--tw-enter-scale, 1),
        var(--tw-enter-scale, 1)
      )
      rotate(var(--tw-enter-rotate, 0));
  }
  0% {
    opacity: 0;
    transform: scale(0.95);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}
@keyframes exit {
  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(
        var(--tw-exit-translate-x, 0),
        var(--tw-exit-translate-y, 0),
        0
      )
      scale3d(
        var(--tw-exit-scale, 1),
        var(--tw-exit-scale, 1),
        var(--tw-exit-scale, 1)
      )
      rotate(var(--tw-exit-rotate, 0));
  }
  0% {
    opacity: 1;
    transform: scale(1);
  }
  100% {
    opacity: 0;
    transform: scale(0.95);
  }
}
