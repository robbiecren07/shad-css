{
  "name": "command",
  "dependencies": [
    "cmdk@1.0.0"
  ],
  "registryDependencies": [
    "dialog"
  ],
  "type": "components:ui",
  "files": [
    {
      "type": "tsx",
      "name": "index.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { type DialogProps } from '@radix-ui/react-dialog';\nimport { MagnifyingGlassIcon } from '@radix-ui/react-icons';\nimport { Command as CommandPrimitive } from 'cmdk';\nimport { cn } from '@/lib/utils';\nimport { Dialog, DialogContent } from '@/registry/new-york/ui/dialog';\nimport styles from './command.module.css';\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(styles.command, className)}\n    {...props}\n  />\n));\nCommand.displayName = CommandPrimitive.displayName;\ninterface CommandDialogProps extends DialogProps {}\n\nconst CommandDialog = ({ children, ...props }: CommandDialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className={styles.commandDialog}>\n        <Command className={styles.commandDialogCommand}>{children}</Command>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className={styles.commandInput} cmdk-input-wrapper=\"\">\n    <MagnifyingGlassIcon className={styles.commandInputMagnifyingGlass} />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(styles.commandInputInput, className)}\n      {...props}\n    />\n  </div>\n));\nCommandInput.displayName = CommandPrimitive.Input.displayName;\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(styles.commandList, className)}\n    {...props}\n  />\n));\nCommandList.displayName = CommandPrimitive.List.displayName;\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className={styles.commandEmpty}\n    {...props}\n  />\n));\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName;\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(styles.commandGroup, className)}\n    {...props}\n  />\n));\nCommandGroup.displayName = CommandPrimitive.Group.displayName;\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(styles.commandSeparator, className)}\n    {...props}\n  />\n));\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName;\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(styles.commandItem, className)}\n    {...props}\n  />\n));\nCommandItem.displayName = CommandPrimitive.Item.displayName;\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return <span className={cn(styles.commandShortcut, className)} {...props} />;\n};\nCommandShortcut.displayName = 'CommandShortcut';\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n};\n"
    },
    {
      "type": "css",
      "name": "command.module.css",
      "content": ".command {\n  display: flex;\n  height: 100%;\n  width: 100%;\n  flex-direction: column;\n  overflow: hidden;\n  border-radius: calc(var(--radius) - 2px);\n  background-color: hsl(var(--popover));\n  color: hsl(var(--popover-foreground));\n}\n.commandDialog {\n  overflow: hidden;\n  padding: 0px;\n}\n.commandDialogCommand [cmdk-group-heading] {\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n  font-weight: 500;\n  color: hsl(var(--muted-foreground));\n}\n.commandDialogCommand [cmdk-group]:not([hidden]) ~ [cmdk-group] {\n  padding-top: 0px;\n}\n.commandDialogCommand [cmdk-group] {\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n}\n.commandDialogCommand [cmdk-input-wrapper] svg {\n  height: 1.25rem;\n  width: 1.25rem;\n}\n.commandDialogCommand [cmdk-input] {\n  height: 3rem;\n}\n.commandDialogCommand [cmdk-item] {\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n  padding-top: 0.75rem;\n  padding-bottom: 0.75rem;\n}\n.commandDialogCommand [cmdk-item] svg {\n  height: 1.25rem;\n  width: 1.25rem;\n}\n.commandInput {\n  display: flex;\n  align-items: center;\n  border-bottom-width: 1px;\n  padding-left: 0.75rem;\n  padding-right: 0.75rem;\n}\n.commandInputMagnifyingGlass {\n  margin-right: 0.5rem;\n  height: 1rem;\n  width: 1rem;\n  flex-shrink: 0;\n  opacity: 0.5;\n}\n.commandInputInput {\n  display: flex;\n  height: 2.5rem;\n  width: 100%;\n  border-radius: calc(var(--radius) - 2px);\n  background-color: transparent;\n  padding-top: 0.75rem;\n  padding-bottom: 0.75rem;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n}\n.commandInputInput::placeholder {\n  color: hsl(var(--muted-foreground));\n}\n.commandInputInput:disabled {\n  cursor: not-allowed;\n  opacity: 0.5;\n}\n.commandList {\n  max-height: 300px;\n  overflow-y: auto;\n  overflow-x: hidden;\n}\n.commandEmpty {\n  padding-top: 1.5rem;\n  padding-bottom: 1.5rem;\n  text-align: center;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n}\n.commandGroup {\n  overflow: hidden;\n  padding: 0.25rem;\n  color: hsl(var(--foreground));\n}\n.commandGroup [cmdk-group-heading] {\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n  padding-top: 0.375rem;\n  padding-bottom: 0.375rem;\n  font-size: 0.75rem;\n  line-height: 1rem;\n  font-weight: 500;\n  color: hsl(var(--muted-foreground));\n}\n.commandSeparator {\n  margin-left: -0.25rem;\n  margin-right: -0.25rem;\n  height: 1px;\n  background-color: hsl(var(--border));\n}\n.commandItem {\n  position: relative;\n  display: flex;\n  cursor: default;\n  user-select: none;\n  align-items: center;\n  border-radius: calc(var(--radius) - 4px);\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n  padding-top: 0.375rem;\n  padding-bottom: 0.375rem;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n}\n.commandItem[data-disabled=\"true\"] {\n  pointer-events: none;\n}\n.commandItem[data-selected=\"true\"] {\n  background-color: hsl(var(--accent));\n  color: hsl(var(--accent-foreground));\n}\n.commandItem[data-disabled=\"true\"] {\n  opacity: 0.5;\n}\n.commandShortcut {\n  margin-left: auto;\n  font-size: 0.75rem;\n  line-height: 1rem;\n  letter-spacing: 0.1em;\n  color: hsl(var(--muted-foreground));\n}\n"
    }
  ]
}