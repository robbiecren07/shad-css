{
  "name": "select",
  "dependencies": [
    "@radix-ui/react-select"
  ],
  "registryDependencies": [],
  "type": "components:ui",
  "files": [
    {
      "type": "tsx",
      "name": "index",
      "content": "'use client';\n\nimport * as React from 'react';\nimport {\n  CaretSortIcon,\n  CheckIcon,\n  ChevronDownIcon,\n  ChevronUpIcon,\n} from '@radix-ui/react-icons';\nimport * as SelectPrimitive from '@radix-ui/react-select';\nimport { cn } from '@/lib/utils';\nimport styles from './select.module.css';\n\nconst Select = SelectPrimitive.Root;\n\nconst SelectGroup = SelectPrimitive.Group;\n\nconst SelectValue = SelectPrimitive.Value;\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(styles.selectTrigger, className)}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <CaretSortIcon className={styles.selectTriggerCaretSort} />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n));\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName;\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(styles.selectScrollUpButton, className)}\n    {...props}\n  >\n    <ChevronUpIcon />\n  </SelectPrimitive.ScrollUpButton>\n));\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName;\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(styles.selectScrollDownButton, className)}\n    {...props}\n  >\n    <ChevronDownIcon />\n  </SelectPrimitive.ScrollDownButton>\n));\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName;\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = 'popper', ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        styles.selectContent,\n        position === 'popper' && styles.selectContentPopper,\n        className,\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          styles.selectContentViewport,\n          position === 'popper' && styles.selectContentViewportPopper,\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n));\nSelectContent.displayName = SelectPrimitive.Content.displayName;\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(styles.selectLabel, className)}\n    {...props}\n  />\n));\nSelectLabel.displayName = SelectPrimitive.Label.displayName;\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(styles.selectItem, className)}\n    {...props}\n  >\n    <span className={styles.selectItemSpan}>\n      <SelectPrimitive.ItemIndicator>\n        <CheckIcon className={styles.selectItemCheck} />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n));\nSelectItem.displayName = SelectPrimitive.Item.displayName;\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(styles.selectSeparator, className)}\n    {...props}\n  />\n));\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName;\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n};\n"
    },
    {
      "type": "css",
      "name": "select.module",
      "content": ".selectTrigger {\n  display: flex;\n  height: 2.5rem;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: calc(var(--radius) - 2px);\n  border-width: 1px;\n  border-color: hsl(var(--input));\n  background-color: hsl(var(--background));\n  padding-left: 0.75rem;\n  padding-right: 0.75rem;\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  --tw-ring-offset-color: hsl(var(--background));\n}\n.selectTrigger::placeholder {\n  color: hsl(var(--muted-foreground));\n}\n.selectTrigger:focus {\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width)\n    var(--tw-ring-offset-color);\n  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width))\n    var(--tw-ring-color);\n  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);\n  --tw-ring-color: hsl(var(--ring));\n  --tw-ring-offset-width: 2px;\n}\n.selectTrigger:disabled {\n  cursor: not-allowed;\n  opacity: 0.5;\n}\n.selectTrigger > span {\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 1;\n}\n.selectTriggerChevronDown {\n  height: 1rem;\n  width: 1rem;\n  opacity: 0.5;\n}\n.selectScrollUpButton {\n  display: flex;\n  cursor: default;\n  align-items: center;\n  justify-content: center;\n  padding-top: 0.25rem;\n  padding-bottom: 0.25rem;\n}\n.selectScrollDownButton {\n  display: flex;\n  cursor: default;\n  align-items: center;\n  justify-content: center;\n  padding-top: 0.25rem;\n  padding-bottom: 0.25rem;\n}\n.selectContent {\n  position: relative;\n  z-index: 50;\n  max-height: var(--radix-select-content-available-height);\n  min-width: 8rem;\n  transform-origin: var(--radix-select-content-transform-origin);\n  overflow: hidden;\n  border-radius: calc(var(--radius) - 2px);\n  border-width: 1px;\n  background-color: hsl(var(--popover));\n  color: hsl(var(--popover-foreground));\n  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);\n  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);\n  box-shadow:\n    var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\n}\n.selectContent[data-state='open'] {\n  animation: enter 0.15s cubic-bezier(0.16, 1, 0.3, 1) both;\n  animation-name: enter;\n  animation-duration: 150ms;\n  --tw-enter-opacity: initial;\n  --tw-enter-scale: initial;\n  --tw-enter-rotate: initial;\n  --tw-enter-translate-x: initial;\n  --tw-enter-translate-y: initial;\n  --tw-enter-opacity: 0;\n  --tw-enter-scale: 0.95;\n}\n.selectContent[data-state='closed'] {\n  animation: exit 0.15s cubic-bezier(0.16, 1, 0.3, 1) both;\n  animation-name: exit;\n  animation-duration: 150ms;\n  --tw-exit-opacity: initial;\n  --tw-exit-scale: initial;\n  --tw-exit-rotate: initial;\n  --tw-exit-translate-x: initial;\n  --tw-exit-translate-y: initial;\n  --tw-exit-opacity: 0;\n  --tw-exit-scale: 0.95;\n}\n.selectContentPopper[data-side='bottom'] {\n  --tw-enter-translate-y: -0.5rem;\n  --tw-translate-y: 0.25rem;\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))\n    skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))\n    scaleY(var(--tw-scale-y));\n}\n.selectContentPopper[data-side='left'] {\n  --tw-enter-translate-x: 0.5rem;\n  --tw-translate-x: -0.25rem;\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))\n    skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))\n    scaleY(var(--tw-scale-y));\n}\n.selectContentPopper[data-side='right'] {\n  --tw-enter-translate-x: -0.5rem;\n  --tw-translate-x: 0.25rem;\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))\n    skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))\n    scaleY(var(--tw-scale-y));\n}\n.selectContentPopper[data-side='top'] {\n  --tw-enter-translate-y: 0.5rem;\n  --tw-translate-y: -0.25rem;\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))\n    skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))\n    scaleY(var(--tw-scale-y));\n}\n.selectContentViewport {\n  padding: 0.25rem;\n}\n.selectContentViewportPopper {\n  height: var(--radix-select-trigger-height);\n  width: 100%;\n  min-width: var(--radix-select-trigger-width);\n}\n.selectLabel {\n  padding-top: 0.375rem;\n  padding-bottom: 0.375rem;\n  padding-left: 2rem;\n  padding-right: 0.5rem;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  font-weight: 600;\n}\n.selectItem {\n  position: relative;\n  display: flex;\n  width: 100%;\n  cursor: default;\n  user-select: none;\n  align-items: center;\n  border-radius: calc(var(--radius) - 4px);\n  padding-top: 0.375rem;\n  padding-bottom: 0.375rem;\n  padding-left: 2rem;\n  padding-right: 0.5rem;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n}\n.selectItem:focus {\n  background-color: hsl(var(--accent));\n  color: hsl(var(--accent-foreground));\n}\n.selectItem[data-disabled] {\n  pointer-events: none;\n  opacity: 0.5;\n}\n.selectItemSpan {\n  position: absolute;\n  left: 0.5rem;\n  display: flex;\n  height: 0.875rem;\n  width: 0.875rem;\n  align-items: center;\n  justify-content: center;\n}\n.selectItemCheck {\n  width: 1rem;\n  height: 1rem;\n}\n.selectSeparator {\n  margin-left: -0.25rem;\n  margin-right: -0.25rem;\n  margin-top: 0.25rem;\n  margin-bottom: 0.25rem;\n  height: 1px;\n  background-color: hsl(var(--muted));\n}\n@keyframes enter {\n  from {\n    opacity: var(--tw-enter-opacity, 1);\n    transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0)\n      scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1))\n      rotate(var(--tw-enter-rotate, 0));\n  }\n  0% {\n    opacity: 0;\n    transform: scale(0.95);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n@keyframes exit {\n  to {\n    opacity: var(--tw-exit-opacity, 1);\n    transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0)\n      scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1))\n      rotate(var(--tw-exit-rotate, 0));\n  }\n  0% {\n    opacity: 1;\n    transform: scale(1);\n  }\n  100% {\n    opacity: 0;\n    transform: scale(0.95);\n  }\n}\n"
    }
  ]
}