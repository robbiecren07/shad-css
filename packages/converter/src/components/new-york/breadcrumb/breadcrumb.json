{
  "name": "breadcrumb",
  "dependencies": [
    "@radix-ui/react-slot"
  ],
  "registryDependencies": [],
  "type": "components:ui",
  "files": [
    {
      "type": "tsx",
      "name": "index",
      "content": "import * as React from 'react';\nimport { ChevronRightIcon, DotsHorizontalIcon } from '@radix-ui/react-icons';\nimport { Slot } from '@radix-ui/react-slot';\nimport { cn } from '@/lib/utils';\nimport styles from './breadcrumb.module.css';\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<'nav'> & {\n    separator?: React.ReactNode;\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />);\nBreadcrumb.displayName = 'Breadcrumb';\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<'ol'>\n>(({ className, ...props }, ref) => (\n  <ol ref={ref} className={cn(styles.breadcrumbList, className)} {...props} />\n));\nBreadcrumbList.displayName = 'BreadcrumbList';\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<'li'>\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(styles.breadcrumbItem, className)} {...props} />\n));\nBreadcrumbItem.displayName = 'BreadcrumbItem';\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<'a'> & {\n    asChild?: boolean;\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : 'a';\n  return <Comp ref={ref} className={cn(styles.comp, className)} {...props} />;\n});\nBreadcrumbLink.displayName = 'BreadcrumbLink';\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<'span'>\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(styles.breadcrumbPage, className)}\n    {...props}\n  />\n));\nBreadcrumbPage.displayName = 'BreadcrumbPage';\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<'li'>) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(styles.breadcrumbSeparator, className)}\n    {...props}\n  >\n    {children ?? <ChevronRightIcon />}\n  </li>\n);\nBreadcrumbSeparator.displayName = 'BreadcrumbSeparator';\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<'span'>) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(styles.breadcrumbEllipsis, className)}\n    {...props}\n  >\n    <DotsHorizontalIcon className={styles.breadcrumbEllipsisDotsHorizontal} />\n    <span className={styles.breadcrumbEllipsisSpan}>More</span>\n  </span>\n);\nBreadcrumbEllipsis.displayName = 'BreadcrumbElipssis';\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n};\n"
    },
    {
      "type": "css",
      "name": "breadcrumb.module",
      "content": ".breadcrumbList {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 0.375rem;\n  overflow-wrap: break-word;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  color: hsl(var(--muted-foreground));\n}\n@media (min-width: 640px) {\n  .breadcrumbList {\n    gap: 0.625rem;\n  }\n}\n.breadcrumbItem {\n  display: inline-flex;\n  align-items: center;\n  gap: 0.375rem;\n}\n.comp {\n  transition-property:\n    color, background-color, border-color, text-decoration-color, fill, stroke;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 150ms;\n}\n.comp:hover {\n  color: hsl(var(--foreground));\n}\n.breadcrumbPage {\n  font-weight: 400;\n  color: hsl(var(--foreground));\n}\n.breadcrumbSeparator > svg {\n  width: 0.875rem;\n  height: 0.875rem;\n}\n.breadcrumbEllipsis {\n  display: flex;\n  height: 2.25rem;\n  width: 2.25rem;\n  align-items: center;\n  justify-content: center;\n}\n.breadcrumbEllipsisDotsHorizontal {\n  height: 1rem;\n  width: 1rem;\n}\n.breadcrumbEllipsisSpan {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n}\n"
    }
  ]
}